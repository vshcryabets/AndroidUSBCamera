name: CMake test C++

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Create build directory and run CMake
      run: |
        sudo apt-get -y update
        sudo apt-get install -y libx264-dev libgtk-4-dev libportaudio2 portaudio19-dev
        
    - name: Configure CMake
      working-directory: ${{github.workspace}}/
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}}/linux -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}/
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Encoders tests
      working-directory: ${{github.workspace}}/build/modules/encoders/
      run: ./encoders_tests -s

    - name: Images tests
      working-directory: ${{github.workspace}}/build/modules/images/
      run: ./images_tests -s

    - name: Sources tests
      working-directory: ${{github.workspace}}/build/modules/sources/
      run: ./Sources_tests -s